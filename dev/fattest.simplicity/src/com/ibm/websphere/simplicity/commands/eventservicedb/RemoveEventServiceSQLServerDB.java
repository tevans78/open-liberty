/*******************************************************************************
 * Copyright (c) 2011 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/

package com.ibm.websphere.simplicity.commands.eventservicedb;

import java.util.Properties;
import java.util.List;
import com.ibm.websphere.simplicity.Scope;
import com.ibm.websphere.simplicity.OperationResults;
import com.ibm.websphere.simplicity.commands.Command;

/**
 * NOTE: Please do not use this command unless a Simplicity API does not already exist.
 * The removeEventServiceSQLServerDB command removes the Event Service database and data sources for SQL Server from a server or cluster.
 *   'removeDB': The command removes the database when this parameter is set to true and does not remove the database when set to false. To remove the database, the current machine must already configured to run the database commands.
 *   'nodeName': The name of the node that contains the server where the Event Service data source should be removed. If this parameter is specified, then the serverName parameter must be set. You must not specify this parameter if the clusterName parameter is specified.
 *   'serverName': The name of the server where the Event Service data source should be removed. If this parameter is specified without the nodeName parameter, the command will use the node name of the current WebSphere profile. You must not specify this parameter if the clusterName parameter is specified.
 *   'clusterName': The name of the cluster where the Event Service data source should be removed. If this parameter is specified, then the serverName and nodeName parameters must not be set. You must not specify this parameter if the serverName and nodeName parameters are specified.
 *   'dbServerName': The server name of the SQL Server database. This parameter must be set when the parameter removeDB is set to true.
 *   'dbUser': SQL Server user ID that owns the Event Service tables. The default value is ceiuser if not specified.
 *   'saUser': User ID that has privileges to drop the databases and users. The default value is sa if not specified.
 *   'saPassword': The password specified by the saUser parameter. This parameter is required when the parameter removeDB is set to true.
 *   'dbScriptDir': The directory containing the database scripts generated by the Event Service database configuration command. If specified, the command will run the scripts in this directory to remove the Event Service database. The default path is $profile/databases/event/&lt;node&gt;/&lt;server&gt;/dbscripts directory if not specified.
 * The required parameters are found in the constructor.
 */
public class RemoveEventServiceSQLServerDB extends Command {

	private Boolean removeDB = false;
	private String nodeName;
	private String serverName;
	private String clusterName;
	private String dbServerName;
	private String dbUser = "ceiuser";
	private String saUser = "sa";
	private String saPassword;
	private String dbScriptDir;

	public RemoveEventServiceSQLServerDB() {
		super("removeEventServiceSQLServerDB");
	}

	/**
	 * The command removes the database when this parameter is set to true and does not remove the database when set to false. To remove the database, the current machine must already configured to run the database commands.
	 */
	public Boolean getRemoveDB() {
		return this.removeDB;
	}

	/**
	 * The command removes the database when this parameter is set to true and does not remove the database when set to false. To remove the database, the current machine must already configured to run the database commands.
	 */
	public void setRemoveDB(Boolean value) {
		this.removeDB = value;
	}

	/**
	 * The name of the node that contains the server where the Event Service data source should be removed. If this parameter is specified, then the serverName parameter must be set. You must not specify this parameter if the clusterName parameter is specified.
	 */
	public String getNodeName() {
		return this.nodeName;
	}

	/**
	 * The name of the node that contains the server where the Event Service data source should be removed. If this parameter is specified, then the serverName parameter must be set. You must not specify this parameter if the clusterName parameter is specified.
	 */
	public void setNodeName(String value) {
		this.nodeName = value;
	}

	/**
	 * The name of the server where the Event Service data source should be removed. If this parameter is specified without the nodeName parameter, the command will use the node name of the current WebSphere profile. You must not specify this parameter if the clusterName parameter is specified.
	 */
	public String getServerName() {
		return this.serverName;
	}

	/**
	 * The name of the server where the Event Service data source should be removed. If this parameter is specified without the nodeName parameter, the command will use the node name of the current WebSphere profile. You must not specify this parameter if the clusterName parameter is specified.
	 */
	public void setServerName(String value) {
		this.serverName = value;
	}

	/**
	 * The name of the cluster where the Event Service data source should be removed. If this parameter is specified, then the serverName and nodeName parameters must not be set. You must not specify this parameter if the serverName and nodeName parameters are specified.
	 */
	public String getClusterName() {
		return this.clusterName;
	}

	/**
	 * The name of the cluster where the Event Service data source should be removed. If this parameter is specified, then the serverName and nodeName parameters must not be set. You must not specify this parameter if the serverName and nodeName parameters are specified.
	 */
	public void setClusterName(String value) {
		this.clusterName = value;
	}

	/**
	 * The server name of the SQL Server database. This parameter must be set when the parameter removeDB is set to true.
	 */
	public String getDbServerName() {
		return this.dbServerName;
	}

	/**
	 * The server name of the SQL Server database. This parameter must be set when the parameter removeDB is set to true.
	 */
	public void setDbServerName(String value) {
		this.dbServerName = value;
	}

	/**
	 * SQL Server user ID that owns the Event Service tables. The default value is ceiuser if not specified.
	 */
	public String getDbUser() {
		return this.dbUser;
	}

	/**
	 * SQL Server user ID that owns the Event Service tables. The default value is ceiuser if not specified.
	 */
	public void setDbUser(String value) {
		this.dbUser = value;
	}

	/**
	 * User ID that has privileges to drop the databases and users. The default value is sa if not specified.
	 */
	public String getSaUser() {
		return this.saUser;
	}

	/**
	 * User ID that has privileges to drop the databases and users. The default value is sa if not specified.
	 */
	public void setSaUser(String value) {
		this.saUser = value;
	}

	/**
	 * The password specified by the saUser parameter. This parameter is required when the parameter removeDB is set to true.
	 */
	public String getSaPassword() {
		return this.saPassword;
	}

	/**
	 * The password specified by the saUser parameter. This parameter is required when the parameter removeDB is set to true.
	 */
	public void setSaPassword(String value) {
		this.saPassword = value;
	}

	/**
	 * The directory containing the database scripts generated by the Event Service database configuration command. If specified, the command will run the scripts in this directory to remove the Event Service database. The default path is $profile/databases/event/&lt;node&gt;/&lt;server&gt;/dbscripts directory if not specified.
	 */
	public String getDbScriptDir() {
		return this.dbScriptDir;
	}

	/**
	 * The directory containing the database scripts generated by the Event Service database configuration command. If specified, the command will run the scripts in this directory to remove the Event Service database. The default path is $profile/databases/event/&lt;node&gt;/&lt;server&gt;/dbscripts directory if not specified.
	 */
	public void setDbScriptDir(String value) {
		this.dbScriptDir = value;
	}

	public Properties __getParameters() {
		Properties ret = new Properties();
		if (this.removeDB != null) {
			ret.put("removeDB", this.removeDB);
		}
		if (this.nodeName != null) {
			ret.put("nodeName", this.nodeName);
		}
		if (this.serverName != null) {
			ret.put("serverName", this.serverName);
		}
		if (this.clusterName != null) {
			ret.put("clusterName", this.clusterName);
		}
		if (this.dbServerName != null) {
			ret.put("dbServerName", this.dbServerName);
		}
		if (this.dbUser != null) {
			ret.put("dbUser", this.dbUser);
		}
		if (this.saUser != null) {
			ret.put("saUser", this.saUser);
		}
		if (this.saPassword != null) {
			ret.put("saPassword", this.saPassword);
		}
		if (this.dbScriptDir != null) {
			ret.put("dbScriptDir", this.dbScriptDir);
		}
		return ret;
	}

	public Object __getTarget() {
		return null;
	}

	public List<Command> __getSteps() {
		return null;
	}

	/**
	 * Executes the command against the specified scope.
	 */
	public OperationResults<Object> run(Scope scope) throws Exception {
		return super.run(scope);
	}

}

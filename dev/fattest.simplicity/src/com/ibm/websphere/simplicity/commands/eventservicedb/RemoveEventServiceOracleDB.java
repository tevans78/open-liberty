/*******************************************************************************
 * Copyright (c) 2011 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/

package com.ibm.websphere.simplicity.commands.eventservicedb;

import java.util.Properties;
import java.util.List;
import com.ibm.websphere.simplicity.Scope;
import com.ibm.websphere.simplicity.OperationResults;
import com.ibm.websphere.simplicity.commands.Command;

/**
 * NOTE: Please do not use this command unless a Simplicity API does not already exist.
 * The removeEventServiceOracleDB command removes the Event Service tables and data sources for Oracle from a server or cluster. The command does not remove the database.
 *   'removeDB': The command removes the Event Service for Oracle tables when this parameter is set to true and does not remove the Event Service for Oracle tables when set to false.
 *   'nodeName': The name of the node that contains the server where the Event Service data source should be removed. If this parameter is specified, then the serverName parameter must be set. You must not specify this parameter if the clusterName parameter is specified.
 *   'serverName': The name of the server where the Event Service data source should be removed. If this parameter is specified without the nodeName parameter, the command will use the node name of the current WebSphere profile. You must not specify this parameter if the clusterName parameter is specified.
 *   'clusterName': The name of the cluster where the Event Service data source should be removed. If this parameter is specified, then the serverName and nodeName parameters must not be set. You must not specify this parameter if the serverName and nodeName parameters are specified.
 *   'sysUser': Oracle database sys user ID. The default value is sys if not specified.
 *   'sysPassword': The password for the user specified by the sysUser parameter.
 *   'dbScriptDir': The directory containing the database scripts generated by the Event Service database configuration command. If specified, the command will run the scripts in this directory to remove the Event Service database. The default path is $profile/databases/event/&lt;node&gt;/&lt;server&gt;/dbscripts directory if not specified.
 * The required parameters are found in the constructor.
 */
public class RemoveEventServiceOracleDB extends Command {

	private Boolean removeDB = false;
	private String nodeName;
	private String serverName;
	private String clusterName;
	private String sysUser = "sys";
	private String sysPassword;
	private String dbScriptDir;

	public RemoveEventServiceOracleDB() {
		super("removeEventServiceOracleDB");
	}

	/**
	 * The command removes the Event Service for Oracle tables when this parameter is set to true and does not remove the Event Service for Oracle tables when set to false.
	 */
	public Boolean getRemoveDB() {
		return this.removeDB;
	}

	/**
	 * The command removes the Event Service for Oracle tables when this parameter is set to true and does not remove the Event Service for Oracle tables when set to false.
	 */
	public void setRemoveDB(Boolean value) {
		this.removeDB = value;
	}

	/**
	 * The name of the node that contains the server where the Event Service data source should be removed. If this parameter is specified, then the serverName parameter must be set. You must not specify this parameter if the clusterName parameter is specified.
	 */
	public String getNodeName() {
		return this.nodeName;
	}

	/**
	 * The name of the node that contains the server where the Event Service data source should be removed. If this parameter is specified, then the serverName parameter must be set. You must not specify this parameter if the clusterName parameter is specified.
	 */
	public void setNodeName(String value) {
		this.nodeName = value;
	}

	/**
	 * The name of the server where the Event Service data source should be removed. If this parameter is specified without the nodeName parameter, the command will use the node name of the current WebSphere profile. You must not specify this parameter if the clusterName parameter is specified.
	 */
	public String getServerName() {
		return this.serverName;
	}

	/**
	 * The name of the server where the Event Service data source should be removed. If this parameter is specified without the nodeName parameter, the command will use the node name of the current WebSphere profile. You must not specify this parameter if the clusterName parameter is specified.
	 */
	public void setServerName(String value) {
		this.serverName = value;
	}

	/**
	 * The name of the cluster where the Event Service data source should be removed. If this parameter is specified, then the serverName and nodeName parameters must not be set. You must not specify this parameter if the serverName and nodeName parameters are specified.
	 */
	public String getClusterName() {
		return this.clusterName;
	}

	/**
	 * The name of the cluster where the Event Service data source should be removed. If this parameter is specified, then the serverName and nodeName parameters must not be set. You must not specify this parameter if the serverName and nodeName parameters are specified.
	 */
	public void setClusterName(String value) {
		this.clusterName = value;
	}

	/**
	 * Oracle database sys user ID. The default value is sys if not specified.
	 */
	public String getSysUser() {
		return this.sysUser;
	}

	/**
	 * Oracle database sys user ID. The default value is sys if not specified.
	 */
	public void setSysUser(String value) {
		this.sysUser = value;
	}

	/**
	 * The password for the user specified by the sysUser parameter.
	 */
	public String getSysPassword() {
		return this.sysPassword;
	}

	/**
	 * The password for the user specified by the sysUser parameter.
	 */
	public void setSysPassword(String value) {
		this.sysPassword = value;
	}

	/**
	 * The directory containing the database scripts generated by the Event Service database configuration command. If specified, the command will run the scripts in this directory to remove the Event Service database. The default path is $profile/databases/event/&lt;node&gt;/&lt;server&gt;/dbscripts directory if not specified.
	 */
	public String getDbScriptDir() {
		return this.dbScriptDir;
	}

	/**
	 * The directory containing the database scripts generated by the Event Service database configuration command. If specified, the command will run the scripts in this directory to remove the Event Service database. The default path is $profile/databases/event/&lt;node&gt;/&lt;server&gt;/dbscripts directory if not specified.
	 */
	public void setDbScriptDir(String value) {
		this.dbScriptDir = value;
	}

	public Properties __getParameters() {
		Properties ret = new Properties();
		if (this.removeDB != null) {
			ret.put("removeDB", this.removeDB);
		}
		if (this.nodeName != null) {
			ret.put("nodeName", this.nodeName);
		}
		if (this.serverName != null) {
			ret.put("serverName", this.serverName);
		}
		if (this.clusterName != null) {
			ret.put("clusterName", this.clusterName);
		}
		if (this.sysUser != null) {
			ret.put("sysUser", this.sysUser);
		}
		if (this.sysPassword != null) {
			ret.put("sysPassword", this.sysPassword);
		}
		if (this.dbScriptDir != null) {
			ret.put("dbScriptDir", this.dbScriptDir);
		}
		return ret;
	}

	public Object __getTarget() {
		return null;
	}

	public List<Command> __getSteps() {
		return null;
	}

	/**
	 * Executes the command against the specified scope.
	 */
	public OperationResults<Object> run(Scope scope) throws Exception {
		return super.run(scope);
	}

}
